#!/bin/bash
# {{ ansible_managed }}

set -euo pipefail

mount_bindfs () {
    local src_dir="$1"
    local dst_dir="$2"
    echo "Bind mounting ${src_dir} to ${dst_dir}"
    bindfs -o no-allow-other "${dst_dir}" "${src_dir}"
}

unmount_bindfs () {
    local src_dir="$1"
    echo "Removing bind mount from ${src_dir}"
    fusermount -u "${src_dir}"
}

create_directory () {
    local dir="$1"
    mkdir -p "${dir}"
    chmod 700 "${dir}"
}

# Parse arguments
unmount_bind_mounts=false
if [ "$#" -eq 1 ] && [ "$1" == "--unmount" ]; then
    unmount_bind_mounts=true
fi

# Loop over configuration file and mount filesystems
while IFS= read -r line; do
    if [[ ! "$line" =~ ^[^#]*= ]]; then
      continue
    fi

    src_dir="$(echo "${line}" | cut -d'=' -f 1 | xargs echo | envsubst)"
    dst_dir="$(echo "${line}" | cut -d'=' -f 2- | xargs echo | envsubst)"

    if ${unmount_bind_mounts}; then
        if mount_status=$(mountpoint "${src_dir}" 2>&1); then
            unmount_bindfs "${src_dir}"
        elif echo "${mount_status}" | grep -qi "transport endpoint is not connected"; then
            unmount_bindfs "${src_dir}"
        fi
    else
        if [ -d "${dst_dir}" ]; then
            # verify existing dir is suitable
            if [ ! -G "${dst_dir}" ] || [ ! -w "${dst_dir}" ]; then
                # else, make a new/secure one with mktemp
                dst_dir="$(mktemp -d "${dst_dir}-XXXXXX")"
            fi
        else
            create_directory "${dst_dir}"
        fi

        if ! mount_status=$(mountpoint "${src_dir}" 2>&1); then
            if echo "${mount_status}" | grep -qi "transport endpoint is not connected"; then
                unmount_bindfs "${src_dir}"
            fi

            if [ ! -d "${src_dir}" ]; then
                create_directory "${src_dir}"
            fi

            if [ -n "$(ls -A "${src_dir}")" ]; then
                # source directory isn't empty, migrate contents to destination directory
                echo "${src_dir} isn't empty, migrating contents to ${dst_dir}"

                if [ -n "$(ls -A "${dst_dir}")" ]; then
                    # destination directory isn't empty, move it out of the way
                    old_dst_dir="${dst_dir}.old"

                    echo "${dst_dir} isn't empty, moving it to ${old_dst_dir}"

                    if [ -d "${old_dst_dir}" ]; then
                        rm -r "${old_dst_dir}"
                    fi

                    mv "${dst_dir}" "${old_dst_dir}"
                    create_directory "${dst_dir}"
                fi

                mv -T "${src_dir}" "${dst_dir}"
                create_directory "${src_dir}"
            fi

            mount_bindfs "${src_dir}" "${dst_dir}"
        fi
    fi
done < "/etc/bind-mounts.conf"
