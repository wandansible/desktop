---
- name: Install bindfs
  ansible.builtin.apt:
    name: bindfs
    install_recommends: no
    state: present

- name: Resolve path to fusermount binary
  ansible.builtin.stat:
    path: /usr/bin/fusermount
  register: _fusermount_bin

- name: Set fusermount bin path when a symlink
  ansible.builtin.set_fact:
    fusermount_symlink_path: "{{ _fusermount_bin.stat.lnk_source }}"
  when: _fusermount_bin.stat.islnk

- name: Set capabilities for fusermount
  community.general.capabilities:
    path: "{{ fusermount_symlink_path | default('/usr/bin/fusermount') }}"
    capability: cap_sys_admin+ep
    state: present

- name: Remove setuid bit from fusermount
  ansible.builtin.file:
    path: "{{ fusermount_symlink_path | default('/usr/bin/fusermount') }}"
    state: file
    owner: root
    group: root
    mode: u-s

- name: Add bind-mounts script
  ansible.builtin.template:
    src: "bind-mounts/bind-mounts"
    dest: "/usr/local/bin/bind-mounts"
    owner: root
    group: root
    mode: u=rwx,g=rx,o=rx

- name: Add bind-mounts configuration
  ansible.builtin.template:
    src: "bind-mounts/bind-mounts.conf"
    dest: "/etc/bind-mounts.conf"
    owner: root
    group: root
    mode: u=rw,g=r,o=r

- name: Create systemd user directory
  ansible.builtin.file:
    path: /etc/systemd/user
    state: directory
    owner: root
    group: root
    mode: u=rwx,g=rx,o=rx

- name: Add bind-mounts systemd user unit
  ansible.builtin.template:
    src: "bind-mounts/bind-mounts.service"
    dest: "/etc/systemd/user/bind-mounts.service"
    owner: root
    group: root
    mode: u=rw,g=r,o=r

- name: Enable bind-mounts systemd user unit globally
  ansible.builtin.systemd:
    name: "bind-mounts.service"
    enabled: yes
    masked: no
    scope: global

- name: Add profile environment scripts
  ansible.builtin.template:
    src: "profile.d/{{ item }}"
    dest: "/etc/profile.d/{{ item }}"
    owner: root
    group: root
    mode: u=rw,g=r,o=r
  loop:
    - xdg.cache.sh
    - pulseaudio.state.sh
    - disable_file_indexing.sh

- name: Disable and mask file indexing systemd user units globally
  ansible.builtin.systemd:
    name: "{{ item }}"
    enabled: no
    masked: yes
    scope: global
  loop: "{{ desktop_tracker_services }}"

- name: Create systemd user environment generator directory
  ansible.builtin.file:
    path: /etc/systemd/user-environment-generators
    state: directory
    owner: root
    group: root
    mode: u=rwx,g=rx,o=rx

- name: Add systemd user environment generators
  ansible.builtin.template:
    src: "systemd/generators/{{ item }}"
    dest: "/etc/systemd/user-environment-generators/{{ item }}"
    owner: root
    group: root
    mode: u=rwx,g=rx,o=rx
  loop:
    - xdg.cache.sh
    - pulseaudio.state.sh

- name: Configure dconf user profile
  ansible.builtin.lineinfile:
    path: "/etc/dconf/profile/user"
    regexp: "^service-db:keyfile/user$"
    line: "service-db:keyfile/user"
    create: yes
    owner: root
    group: root
    mode: u=rwx,g=rx,o=rx

- name: Create local desktop entry directory
  ansible.builtin.file:
    path: /usr/local/share/applications
    state: directory
    owner: root
    group: root
    mode: u=rxw,g=rx,o=rx

- name: Configure vscode to install extensions in XDG_CACHE_HOME
  ansible.builtin.template:
    src: applications/code.desktop
    dest: /usr/local/share/applications/code.desktop
    owner: root
    group: root
    mode: u=rw,g=r,o=r
